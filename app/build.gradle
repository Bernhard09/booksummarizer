/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.4/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id("org.openjfx.javafxplugin") version "0.0.13"
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.3'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:32.1.1-jre'
    implementation 'org.openjfx:javafx-controls:21'
    implementation 'org.openjfx:javafx-fxml:21'
    implementation 'org.openjfx:javafx-web:21'

    // the Google Gemini API SDK
    // implementation 'com.google.ai.client.generativeai:generativeai:0.5.0' 


    // Epublib for ePub processing
    // implementation 'nl.siegmann.epublib:epublib-core:3.1' 
    
    // PDFBox for PDF processing
    // implementation 'org.apache.pdfbox:pdfbox:3.0.2' 

    // Apache POI for .docx export
    // implementation 'org.apache.poi:poi-ooxml:5.2.5' 

    // Test dependencies (optional)
    // testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.0'
    // testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.10.0'

}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}


javafx {
    version = "21"
    modules = ['javafx.controls', 'javafx.fxml', 'javafx.web']
}

application {
    // Define the main class for the application.
    mainClass = 'booksummarizer.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
